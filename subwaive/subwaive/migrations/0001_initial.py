# Generated by Django 5.1.7 on 2025-03-22 23:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DocusealField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ('field',),
            },
        ),
        migrations.CreateModel(
            name='DocusealSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_id', models.PositiveIntegerField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=16)),
                ('slug', models.CharField(max_length=32)),
            ],
            options={
                'ordering': ('-completed_at', 'status', 'slug'),
            },
        ),
        migrations.CreateModel(
            name='DocusealSubmitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitter_id', models.PositiveIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('slug', models.CharField(max_length=32)),
            ],
            options={
                'ordering': ('email', 'slug'),
            },
        ),
        migrations.CreateModel(
            name='DocusealTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.PositiveIntegerField()),
                ('folder_name', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('slug', models.CharField(max_length=32)),
            ],
            options={
                'ordering': ('folder_name', 'name', 'slug'),
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When was the event logged?')),
                ('description', models.CharField(help_text='What happened?', max_length=512)),
                ('other_info', models.TextField(blank=True, help_text='Additional detail', max_length=4096, null=True)),
                ('json', models.JSONField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': [('can_view_detail', 'Can view detailed user data'), ('can_view_status', 'Can tell if user is current'), ('can_search_customers', 'Can search for customers'), ('can_list_customers', 'Can view customer list'), ('can_remove_check_in', 'Can delete a customer check-in record'), ('can_refresh_data', 'Can force Docuseal and Stripe data to refresh')],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='What is the preferred nae for ths person?', max_length=128)),
            ],
            options={
                'ordering': ('name', 'preferred_email__email'),
            },
        ),
        migrations.CreateModel(
            name='QRCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='What is the name of the View?', max_length=64)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StripeCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'ordering': ('email', 'name'),
            },
        ),
        migrations.CreateModel(
            name='StripePaymentLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('url', models.URLField()),
            ],
            options={
                'ordering': ('stripe_id',),
            },
        ),
        migrations.CreateModel(
            name='StripePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('name', models.CharField(help_text='What is the name of the Price?', max_length=64)),
                ('interval', models.CharField(max_length=64)),
                ('price', models.IntegerField()),
            ],
            options={
                'ordering': ('name', 'interval', 'price'),
            },
        ),
        migrations.CreateModel(
            name='StripeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField(max_length=512)),
            ],
            options={
                'ordering': ('name', 'description'),
            },
        ),
        migrations.CreateModel(
            name='DocusealFieldStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=256)),
                ('field', models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealfield')),
                ('submission', models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealsubmission')),
            ],
            options={
                'ordering': ('field',),
            },
        ),
        migrations.CreateModel(
            name='DocusealSubmitterSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=32)),
                ('role', models.CharField(max_length=64)),
                ('submission', models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealsubmission')),
                ('submitter', models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealsubmitter')),
            ],
            options={
                'ordering': ('-status', 'role'),
            },
        ),
        migrations.AddField(
            model_name='docusealsubmission',
            name='template',
            field=models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealtemplate'),
        ),
        migrations.CreateModel(
            name='PersonDocuseal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.ForeignKey(help_text='Who is the person associated with this Docuseal submitter?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.person')),
                ('submitter', models.ForeignKey(help_text='What is the Docuseal submitter id associated with this person?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.docusealsubmitter')),
            ],
            options={
                'ordering': ('person', 'submitter'),
            },
        ),
        migrations.CreateModel(
            name='PersonEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text="What is this person's email address?", max_length=254)),
                ('person', models.ForeignKey(help_text='Who is the person associated with this Docuseal submitter?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.person')),
            ],
            options={
                'ordering': ('person', 'email'),
            },
        ),
        migrations.AddField(
            model_name='person',
            name='preferred_email',
            field=models.ForeignKey(blank=True, help_text="What is this person's preferred email address?", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='subwaive.personemail'),
        ),
        migrations.CreateModel(
            name='QRCustom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='What is the name of the View?', max_length=64)),
                ('content', models.CharField(help_text="What is the QR code's payload?", max_length=4096)),
                ('category', models.ForeignKey(help_text='What category does this QR code belong to?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.qrcategory')),
            ],
            options={
                'ordering': ('category__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='PersonStripe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.ForeignKey(help_text='Who is the person associated with this Stipe customer?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.person')),
                ('customer', models.ForeignKey(help_text='What is the Stripe customer id associated with this person?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripecustomer')),
            ],
            options={
                'ordering': ('person', 'customer'),
            },
        ),
        migrations.CreateModel(
            name='StripePaymentLinkPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_link', models.ForeignKey(help_text='What Stripe Payment Link is being mapped?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripepaymentlink')),
                ('price', models.ForeignKey(help_text='What Stripe Price is being mapped?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripeprice')),
            ],
            options={
                'ordering': ('price', 'payment_link'),
            },
        ),
        migrations.AddField(
            model_name='stripeprice',
            name='product',
            field=models.ForeignKey(help_text='What Stripe Product does this Price apply to?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripeproduct'),
        ),
        migrations.CreateModel(
            name='StripeSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('current_period_end', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=128)),
                ('customer', models.ForeignKey(help_text='What Stripe Customer holds this Subscription?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripecustomer')),
            ],
        ),
        migrations.CreateModel(
            name='StripeSubscriptionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=64)),
                ('price', models.ForeignKey(help_text='What Stripe Price is being mapped?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripeprice')),
                ('subscription', models.ForeignKey(help_text='What Stripe Price is being mapped?', on_delete=django.db.models.deletion.CASCADE, to='subwaive.stripesubscription')),
            ],
            options={
                'ordering': ('stripe_id', 'price'),
            },
        ),
    ]
